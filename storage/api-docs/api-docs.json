{
    "openapi": "3.0.0",
    "info": {
        "title": "Medical Admission API",
        "description": "API for managing medical patient admissions",
        "version": "1.0.0"
    },
    "paths": {
        "/api/appointments": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get all appointments",
                "operationId": "812c4f15927f3d0e3e959538a6f1104b",
                "responses": {
                    "200": {
                        "description": "List of appointments"
                    }
                }
            },
            "post": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Create a new appointment",
                "operationId": "2b481df28ec53d2afb2ec7c9a3a77846",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "patient_id",
                                    "appointment_type",
                                    "scheduled_at"
                                ],
                                "properties": {
                                    "patient_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "patient_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@hello.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "555-123-4567"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St, Cityville"
                                    },
                                    "appointment_type": {
                                        "type": "string",
                                        "enum": [
                                            "prenatal",
                                            "delivery",
                                            "postnatal"
                                        ],
                                        "example": "prenatal"
                                    },
                                    "scheduled_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-05-15T10:00:00"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "confirmed",
                                            "cancelled",
                                            "completed"
                                        ],
                                        "example": "pending"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Appointment created successfully"
                    }
                }
            }
        },
        "/api/appointments/{id}": {
            "get": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Get a specific appointment",
                "operationId": "cca217dc71eae262de1fe09f314a4948",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Appointment details"
                    },
                    "404": {
                        "description": "Appointment not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Update an existing appointment",
                "operationId": "56cd9e193d590ed31b28bf8fe7162e70",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "patient_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "patient_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@hello.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "555-123-4567"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St, Cityville"
                                    },
                                    "appointment_type": {
                                        "type": "string",
                                        "enum": [
                                            "prenatal",
                                            "delivery",
                                            "postnatal"
                                        ]
                                    },
                                    "scheduled_at": {
                                        "type": "string",
                                        "format": "date-time"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "confirmed",
                                            "cancelled",
                                            "completed"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Appointment updated successfully"
                    },
                    "404": {
                        "description": "Appointment not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Appointments"
                ],
                "summary": "Delete an appointment",
                "operationId": "47535f80ea6b8f4309694ff2123524d3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Appointment deleted successfully"
                    },
                    "404": {
                        "description": "Appointment not found"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "8e4e3cb7b46126f4696379d3c7eeb4ad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login an existing user",
                "operationId": "222b2625838e3c57e017987f73598fda",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully"
                    },
                    "422": {
                        "description": "Validation failed"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout the authenticated user",
                "operationId": "ad65cbbd4e9f201619eae184a5961a98",
                "responses": {
                    "200": {
                        "description": "Logged out successfully"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/obstetric-sheets": {
            "get": {
                "tags": [
                    "Obstetric Sheets"
                ],
                "summary": "Get all obstetric sheets",
                "operationId": "81ce437a5ea6eb40406edf4f147d7186",
                "responses": {
                    "200": {
                        "description": "Successful retrieval"
                    }
                }
            },
            "post": {
                "tags": [
                    "Obstetric Sheets"
                ],
                "summary": "Create a new obstetric sheet",
                "operationId": "64f45ac73f18c25133b75dfa6b347fda",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ObstetricSheet"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/obstetric-sheets/{id}": {
            "get": {
                "tags": [
                    "Obstetric Sheets"
                ],
                "summary": "Retrieve a single obstetric sheet",
                "operationId": "3e0affd96b2586629adc09585ae2aebf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Obstetric Sheets"
                ],
                "summary": "Update a specific obstetric sheet",
                "operationId": "1e01fbc132261ab54a49b1dbbcf1d63d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ObstetricSheet"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated"
                    },
                    "400": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Obstetric Sheets"
                ],
                "summary": "Delete a specific obstetric sheet",
                "operationId": "92e7cf221361da6b45d4f02b8fa0f147",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/patient-admissions": {
            "get": {
                "tags": [
                    "Patient Admissions"
                ],
                "summary": "Get all patient admissions",
                "operationId": "be3584114b69ebeeda29241083876f84",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PatientAdmission"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Patient Admissions"
                ],
                "summary": "Create a new patient admission",
                "operationId": "c42b263c72c49ac958eff649d9ad3949",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatientAdmission"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Patient admission created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatientAdmission"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/patient-admissions/{id}": {
            "get": {
                "tags": [
                    "Patient Admissions"
                ],
                "summary": "Get patient admission by ID",
                "operationId": "0b725edf747f9cc438a965930d6eb323",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Patient admission ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatientAdmission"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient admission not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Patient Admissions"
                ],
                "summary": "Update patient admission",
                "operationId": "1c98344b869554d4f5dc3bdb30dd1600",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Patient admission ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatientAdmission"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Patient admission updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PatientAdmission"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Patient admission not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Patient Admissions"
                ],
                "summary": "Delete patient admission",
                "operationId": "821853dc375362c6787b6dd15e862153",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Patient admission ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Patient admission deleted successfully"
                    },
                    "404": {
                        "description": "Patient admission not found"
                    }
                }
            }
        },
        "/api/scoring-charts": {
            "get": {
                "tags": [
                    "ScoringChart"
                ],
                "summary": "Get all scoring charts",
                "operationId": "9b30d802be26b036e0b061f320efedca",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ScoringChart"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ScoringChart"
                ],
                "summary": "Create a new scoring chart",
                "operationId": "1f0a7926ef01419c8cd011c50c06fceb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ScoringChart"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Scoring Chart created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScoringChart"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/scoring-charts/{id}": {
            "get": {
                "tags": [
                    "ScoringChart"
                ],
                "summary": "Get scoring chart by ID",
                "operationId": "e9f1c987329747cdab02d19f3dbb509c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Scoring chart ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScoringChart"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Chart not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "ScoringChart"
                ],
                "summary": "Update APGAR scoring chart",
                "operationId": "39878bb1798e208912205f513cac9e46",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Scoring chart ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ScoringChart"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ScoringChart"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ScoringChart"
                ],
                "summary": "Delete scoring chart",
                "operationId": "2f78d9ad4754197ec8d424cc19f4b175",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted successfully"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Apppointment": {
                "title": "Appointment",
                "description": "Appointment model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "patient_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "patient_name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "johndoe@hello.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "555-123-4567"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St, Cityville"
                    },
                    "appointment_type": {
                        "type": "string",
                        "enum": [
                            "prenatal",
                            "delivery",
                            "postnatal"
                        ],
                        "example": "prenatal"
                    },
                    "scheduled_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-10T14:30:00Z"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "confirmed",
                            "cancelled"
                        ],
                        "example": "pending"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ObstetricSheet": {
                "required": [
                    "patient_admission_id"
                ],
                "properties": {
                    "id": {
                        "description": "Obstetric sheet ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "patient_admission_id": {
                        "description": "Associated patient admission ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "reason_for_admission": {
                        "description": "Reason for admission",
                        "type": "string"
                    },
                    "admitting_impression": {
                        "description": "Admitting impression",
                        "type": "string"
                    },
                    "final_diagnosis": {
                        "description": "Final diagnosis",
                        "type": "string"
                    },
                    "pertinent_medical_history": {
                        "description": "Pertinent medical history",
                        "type": "string"
                    },
                    "educational_attainment": {
                        "description": "Educational attainment of the patient",
                        "type": "string"
                    },
                    "previous_pregnancies": {
                        "description": "History of previous pregnancies",
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "lmp": {
                        "description": "Last menstrual period date",
                        "type": "string",
                        "format": "date"
                    },
                    "edc": {
                        "description": "Estimated date of confinement",
                        "type": "string",
                        "format": "date"
                    },
                    "aog": {
                        "description": "Age of gestation in weeks",
                        "type": "integer"
                    },
                    "weeks_pmp": {
                        "description": "Weeks post menstrual period",
                        "type": "integer"
                    },
                    "morning_sickness": {
                        "description": "Presence of morning sickness",
                        "type": "boolean"
                    },
                    "quickening": {
                        "description": "Quickening observations",
                        "type": "string"
                    },
                    "abnormal_signs": {
                        "description": "Abnormal signs noted",
                        "type": "string"
                    },
                    "primary_antenatal_condition": {
                        "description": "Primary antenatal condition",
                        "type": "string"
                    },
                    "antenatal_visits_first": {
                        "description": "Date of first antenatal visit",
                        "type": "string",
                        "format": "date"
                    },
                    "antenatal_visits_last": {
                        "description": "Date of last antenatal visit",
                        "type": "string",
                        "format": "date"
                    },
                    "contraceptive_methods": {
                        "description": "Contraceptive methods used",
                        "type": "string"
                    },
                    "additional_children_wanted": {
                        "description": "Additional children wanted by the patient",
                        "type": "string"
                    },
                    "history_of_present_illness": {
                        "description": "History of present illness",
                        "type": "string"
                    },
                    "general_condition": {
                        "description": "General condition of the patient",
                        "type": "string"
                    },
                    "bp": {
                        "description": "Blood pressure",
                        "type": "string"
                    },
                    "hr": {
                        "description": "Heart rate",
                        "type": "integer"
                    },
                    "rr": {
                        "description": "Respiratory rate",
                        "type": "integer"
                    },
                    "temp": {
                        "description": "Body temperature",
                        "type": "number",
                        "format": "float"
                    },
                    "weight": {
                        "description": "Patient's weight",
                        "type": "number",
                        "format": "float"
                    },
                    "height": {
                        "description": "Patient's height",
                        "type": "number",
                        "format": "float"
                    },
                    "fundic_height": {
                        "description": "Fundic height measurement",
                        "type": "string"
                    },
                    "presentation": {
                        "description": "Fetal presentation",
                        "type": "string"
                    },
                    "engaged": {
                        "description": "Whether the fetal head is engaged",
                        "type": "boolean"
                    },
                    "floating": {
                        "description": "Whether the fetal head is floating",
                        "type": "boolean"
                    },
                    "efw": {
                        "description": "Estimated fetal weight",
                        "type": "number",
                        "format": "float"
                    },
                    "fht": {
                        "description": "Fetal heart tone/rate",
                        "type": "integer"
                    },
                    "extremities": {
                        "description": "Condition of extremities",
                        "type": "string"
                    },
                    "edema": {
                        "description": "Presence and degree of edema",
                        "type": "string"
                    },
                    "albuminuria": {
                        "description": "Presence of albumin in urine",
                        "type": "boolean"
                    },
                    "glucosuria": {
                        "description": "Presence of glucose in urine",
                        "type": "boolean"
                    },
                    "hemoglobin": {
                        "description": "Hemoglobin level",
                        "type": "number",
                        "format": "float"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PatientAdmission": {
                "title": "Patient Admission",
                "description": "Patient Admission model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "type": {
                        "type": "string",
                        "example": "Smith"
                    },
                    "medRecNo": {
                        "type": "string",
                        "example": "Smith"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "Smith"
                    },
                    "firstName": {
                        "type": "string",
                        "example": "John"
                    },
                    "middleName": {
                        "type": "string",
                        "example": "Robert",
                        "nullable": true
                    },
                    "permanentAddress": {
                        "type": "string",
                        "example": "123 Main St, Cityville"
                    },
                    "telephoneNumber": {
                        "type": "string",
                        "example": "555-123-4567",
                        "nullable": true
                    },
                    "sex": {
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ],
                        "example": "male"
                    },
                    "civilStatus": {
                        "type": "string",
                        "enum": [
                            "single",
                            "married",
                            "widowed",
                            "divorced"
                        ],
                        "example": "single"
                    },
                    "birthDate": {
                        "type": "string",
                        "format": "date",
                        "example": "1980-01-15"
                    },
                    "age": {
                        "type": "string",
                        "example": "43"
                    },
                    "birthPlace": {
                        "type": "string",
                        "example": "Springfield"
                    },
                    "nationality": {
                        "type": "string",
                        "example": "American"
                    },
                    "religion": {
                        "type": "string",
                        "example": "Christian"
                    },
                    "occupation": {
                        "type": "string",
                        "example": "Engineer"
                    },
                    "employer": {
                        "type": "string",
                        "example": "ABC Company",
                        "nullable": true
                    },
                    "employerAddress": {
                        "type": "string",
                        "example": "456 Business Ave",
                        "nullable": true
                    },
                    "employerTelNo": {
                        "type": "string",
                        "example": "555-987-6543",
                        "nullable": true
                    },
                    "fatherName": {
                        "type": "string",
                        "example": "Michael Smith",
                        "nullable": true
                    },
                    "fatherAddress": {
                        "type": "string",
                        "example": "789 Father St",
                        "nullable": true
                    },
                    "fatherTelNo": {
                        "type": "string",
                        "example": "555-222-3333",
                        "nullable": true
                    },
                    "motherName": {
                        "type": "string",
                        "example": "Susan Smith",
                        "nullable": true
                    },
                    "motherAddress": {
                        "type": "string",
                        "example": "789 Mother St",
                        "nullable": true
                    },
                    "motherTelNo": {
                        "type": "string",
                        "example": "555-444-5555",
                        "nullable": true
                    },
                    "admissionDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-04-10"
                    },
                    "admissionTime": {
                        "type": "string",
                        "example": "14:30"
                    },
                    "dischargeDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-04-13",
                        "nullable": true
                    },
                    "dischargeTime": {
                        "type": "string",
                        "example": "10:00",
                        "nullable": true
                    },
                    "totalDays": {
                        "type": "string",
                        "example": "3",
                        "nullable": true
                    },
                    "attendingPhysician": {
                        "type": "string",
                        "example": "Dr. Johnson"
                    },
                    "admissionType": {
                        "type": "string",
                        "enum": [
                            "new",
                            "old",
                            "former"
                        ],
                        "example": "new"
                    },
                    "referredBy": {
                        "type": "string",
                        "example": "Dr. Williams",
                        "nullable": true
                    },
                    "socialServiceClass": {
                        "type": "string",
                        "example": "A"
                    },
                    "hospitalizationPlan": {
                        "type": "string",
                        "example": "Corporate Healthcare",
                        "nullable": true
                    },
                    "healthInsurance": {
                        "type": "string",
                        "example": "Blue Shield",
                        "nullable": true
                    },
                    "medicareType": {
                        "type": "string",
                        "enum": [
                            "gsis-member",
                            "gsis-dependent",
                            "sss-member",
                            "sss-dependent",
                            "owwa",
                            "non-medicare",
                            "indigent"
                        ],
                        "example": "sss-member",
                        "nullable": true
                    },
                    "allergies": {
                        "type": "string",
                        "example": "Penicillin, Peanuts",
                        "nullable": true
                    },
                    "admissionDiagnosis": {
                        "type": "string",
                        "example": "Acute appendicitis"
                    },
                    "principalDiagnosis": {
                        "type": "string",
                        "example": "Appendicitis with peritonitis"
                    },
                    "otherDiagnosis": {
                        "type": "string",
                        "example": "Mild dehydration",
                        "nullable": true
                    },
                    "principalProcedures": {
                        "type": "string",
                        "example": "Laparoscopic appendectomy",
                        "nullable": true
                    },
                    "otherProcedures": {
                        "type": "string",
                        "example": "IV fluid therapy",
                        "nullable": true
                    },
                    "accidentDetails": {
                        "type": "string",
                        "example": "N/A",
                        "nullable": true
                    },
                    "placeOfOccurrence": {
                        "type": "string",
                        "example": "N/A",
                        "nullable": true
                    },
                    "disposition": {
                        "type": "string",
                        "enum": [
                            "discharged",
                            "transferred",
                            "dama",
                            "absconded",
                            "recovered",
                            "improved",
                            "unimproved",
                            "died"
                        ],
                        "example": "improved"
                    },
                    "autopsyStatus": {
                        "type": "string",
                        "enum": [
                            "48-hours",
                            "more-than-48",
                            "autopsy",
                            "no-autopsy"
                        ],
                        "example": "no-autopsy"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "ScoringChart": {
                "required": [
                    "patient_admission_id",
                    "dateScored",
                    "heartRate",
                    "respiratory",
                    "muscleTone",
                    "reflexes",
                    "color",
                    "heartRate5",
                    "respiratory5",
                    "muscleTone5",
                    "reflexes5",
                    "color5",
                    "heartRate10",
                    "respiratory10",
                    "muscleTone10",
                    "reflexes10",
                    "color10",
                    "otherHeartRate",
                    "otherRespiratory",
                    "otherMuscleTone",
                    "otherReflexes",
                    "otherColor"
                ],
                "properties": {
                    "patient_admission_id": {
                        "type": "integer"
                    },
                    "dateScored": {
                        "type": "string",
                        "format": "date"
                    },
                    "heartRate": {
                        "type": "integer"
                    },
                    "respiratory": {
                        "type": "integer"
                    },
                    "muscleTone": {
                        "type": "integer"
                    },
                    "reflexes": {
                        "type": "integer"
                    },
                    "color": {
                        "type": "integer"
                    },
                    "heartRate5": {
                        "type": "integer"
                    },
                    "respiratory5": {
                        "type": "integer"
                    },
                    "muscleTone5": {
                        "type": "integer"
                    },
                    "reflexes5": {
                        "type": "integer"
                    },
                    "color5": {
                        "type": "integer"
                    },
                    "heartRate10": {
                        "type": "integer"
                    },
                    "respiratory10": {
                        "type": "integer"
                    },
                    "muscleTone10": {
                        "type": "integer"
                    },
                    "reflexes10": {
                        "type": "integer"
                    },
                    "color10": {
                        "type": "integer"
                    },
                    "otherHeartRate": {
                        "type": "integer"
                    },
                    "otherRespiratory": {
                        "type": "integer"
                    },
                    "otherMuscleTone": {
                        "type": "integer"
                    },
                    "otherReflexes": {
                        "type": "integer"
                    },
                    "otherColor": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Appointments",
            "description": "API Endpoints for managing appointments"
        },
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Obstetric Sheets",
            "description": "Obstetric Sheets"
        },
        {
            "name": "Patient Admissions",
            "description": "Patient Admissions"
        },
        {
            "name": "ScoringChart",
            "description": "ScoringChart"
        }
    ]
}